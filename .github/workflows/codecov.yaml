name: Run tests and upload coverage

on:
  push:
    paths:
      - 'apps/**/src/**'
      - 'packages/**/src/**'
      - '**/*.test.{ts,tsx}'
      - '.github/workflows/codecov.yaml'

jobs:
  test:
    name: Run tests and collect coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Check for coverage-relevant changes
        id: coverage_check
        run: |
          BASE_COMMIT=$(git rev-parse --verify HEAD~ 2>/dev/null || echo "$GITHUB_SHA")
          changed=$(git diff --name-only "$BASE_COMMIT" HEAD | grep -E 'apps/.*/src/|packages/.*/src/|\.test\.(ts|tsx)|\.github/workflows/codecov\.yaml' | wc -l)
          if [ "$changed" -eq 0 ]; then
            echo "No coverage-relevant changes detected. Skipping coverage."
            echo "skip_coverage=true" >> $GITHUB_OUTPUT
          else
            echo "Coverage-relevant changes detected in $changed files."
            echo "skip_coverage=false" >> $GITHUB_OUTPUT
          fi

      - name: Cache dependencies
        if: steps.coverage_check.outputs.skip_coverage != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Setup bun
        if: steps.coverage_check.outputs.skip_coverage != 'true'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "1.3.1"

      - name: Use Node.js 24
        if: steps.coverage_check.outputs.skip_coverage != 'true'
        uses: actions/setup-node@v6
        with:
          node-version: 24

      - name: Install dependencies
        if: steps.coverage_check.outputs.skip_coverage != 'true'
        run: bun install --frozen-lockfile

      - name: Build workspace dependencies
        if: steps.coverage_check.outputs.skip_coverage != 'true'
        run: bunx turbo run build --filter='@tuturuuu/types'

      - name: Run tests
        if: steps.coverage_check.outputs.skip_coverage != 'true'
        run: bun vitest run --coverage

      - name: Upload results to Codecov
        if: steps.coverage_check.outputs.skip_coverage != 'true'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
